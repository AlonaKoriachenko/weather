{"ast":null,"code":"var _jsxFileName = \"/Users/matt/GitHub/weather/src/WeatherForecast.js\";\nimport React, { useState, useEffect } from \"react\";\nimport WeatherForecastPreview from \"./WeatherForecastPreview\";\nimport axios from \"axios\";\nimport \"./WeatherForecast.css\";\nexport default function WeatherForecast(props) {\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleForecastResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"WeatherForecast row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, forecast.map(function (day, index) {\n      if (index < 6) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(WeatherForecastPreview, {\n          data: day,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }\n        }));\n      }\n    }));\n  } else {\n    let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n    let url = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.coordinates.lat}&lon=${props.coordinates.lon}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(handleForecastResponse);\n    return null;\n  }\n}","map":{"version":3,"sources":["/Users/matt/GitHub/weather/src/WeatherForecast.js"],"names":["React","useState","useEffect","WeatherForecastPreview","axios","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","coordinates","handleForecastResponse","response","data","daily","map","day","index","apiKey","url","lat","lon","get","then"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;AAIA,WAASC,sBAAT,CAAgCC,QAAhC,EAA0C;AACxCH,IAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,MAAID,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,QAAQ,CAACO,GAAT,CAAa,UAASC,GAAT,EAAcC,KAAd,EAAqB;AACjC,UAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,4BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,GAAG,EAAEA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,sBAAD;AAAwB,UAAA,IAAI,EAAED,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;AACF,KARA,CADH,CADF;AAaD,GAdD,MAcO;AACL,QAAIE,MAAM,GAAG,kCAAb;AACA,QAAIC,GAAG,GAAI,uDAAsDd,KAAK,CAACK,WAAN,CAAkBU,GAAI,QAAOf,KAAK,CAACK,WAAN,CAAkBW,GAAI,UAASH,MAAO,eAApI;AAEAf,IAAAA,KAAK,CAACmB,GAAN,CAAUH,GAAV,EAAeI,IAAf,CAAoBZ,sBAApB;AAEA,WAAO,IAAP;AACD;AACF","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport WeatherForecastPreview from \"./WeatherForecastPreview\";\nimport axios from \"axios\";\nimport \"./WeatherForecast.css\";\n\nexport default function WeatherForecast(props) {\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates])\n\n  function handleForecastResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"WeatherForecast row\">\n        {forecast.map(function(day, index) {\n          if (index < 6) {\n            return (\n              <div className=\"col\" key={index}>\n                <WeatherForecastPreview data={day} />\n              </div>\n            )\n          }\n        })}\n      </div>\n    );\n  } else {\n    let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n    let url = `https://api.openweathermap.org/data/2.5/onecall?lat=${props.coordinates.lat}&lon=${props.coordinates.lon}&appid=${apiKey}&units=metric`;\n\n    axios.get(url).then(handleForecastResponse);\n\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}